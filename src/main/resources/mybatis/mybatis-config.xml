<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">

<configuration>


    <settings>
        <!--开启驼峰命名自动匹配-->
        <setting name="mapUnderscoreToCamelCase" value="true"/>
        <!--打印查询语句-->
        <setting name="logImpl" value="STDOUT_LOGGING"/>
    </settings>

    <typeAliases>
        <typeAlias alias="Integer" type="java.lang.Integer" />
        <typeAlias alias="Long" type="java.lang.Long" />
        <typeAlias alias="String" type="java.lang.String" />
        <typeAlias alias="HashMap" type="java.util.HashMap" />
        <typeAlias alias="LinkedHashMap" type="java.util.LinkedHashMap" />
        <typeAlias alias="ArrayList" type="java.util.ArrayList" />
        <typeAlias alias="LinkedList" type="java.util.LinkedList" />
    </typeAliases>

<!--引入PageHelper插件-->
    <!--5.0之前的版本都是写PageHelper, 5.0之后要换成PageInterceptor-->
    <plugins>
        <plugin interceptor="com.github.pagehelper.PageHelper">
            <!--设置数据库的类型-->
            <property name= "dialect"  value= "mysql" />
            <!-- 设置为true时，会将RowBounds第一个参数offset当成pageNum页码使用 -->
            <!-- 和startPage中的pageNum效果一样-->
            <property name= "offsetAsPageNum"  value= "false" />
            <!-- 设置为true时，使用RowBounds分页会进行count查询 -->
            <property name= "rowBoundsWithCount"  value= "false" />
            <!-- 设置为true时，如果pageSize=0或者RowBounds.limit = 0就会查询出全部的结果 -->
            <!-- （相当于没有执行分页查询，但是返回结果仍然是Page类型）-->
            <property name= "pageSizeZero"  value= "true" />
            <!--设置为true时，如果pageSize=0或者RowBounds.limit = 0就会查询出全部的结果-->
            <property name= "reasonable"  value= "false" />
            <!-- 支持通过Mapper接口参数来传递分页参数 -->
            <property name= "supportMethodsArguments"  value= "false" />
            <!-- always总是返回PageInfo类型,check检查返回类型是否为PageInfo,none返回Page -->
            <property name= "returnPageInfo"  value= "none" />
        </plugin>
    </plugins>



</configuration>


